# This file is auto-generated by capnpython.
# capnp version: {{ code.capnpVersion.major }}.{{ code.capnpVersion.minor }}.{{ code.capnpVersion.micro }}

import capnp
from {{ code.capnp_file }} import ( # type: ignore
    {%- set enum_names = code.enums | map(attribute='name') | list %}
    {%- set struct_names = code.structs | map(attribute='name') | list %}
    {%- set all_names = enum_names + struct_names %}
    {%- for name in all_names %}
    {{ "%s as __capnp_%s," | format(name, name) }}
    {%- endfor -%}
)
{% if code.consts -%}
# Constants
{% for const in code.consts -%}
{{ const.name }} = {{ const.value }}
{% endfor -%}
{%- endif %}
{%- if code.enums %}
# Enumerators
from enum import Enum
{% for enum in code.enums %}
class {{ enum.name }}(Enum): # id {{ '0x%016x' | format(enum.id) }}
    {% for enumerant in enum.enumerants -%}
    {{ enumerant.pyname }} = {{ enumerant.codeOrder }}
    {% endfor %}
{% endfor %}
{%- endif %}
{%- if code.structs %}
# Structs
{%- for struct in code.structs[::-1] %}
class {{ struct.name }}: # id {{ '0x%016x' | format(struct.id) }}
    {% if struct.is_union %}
    class Type(Enum):
        {%- for field in struct.fields %}
        {{ field.name | upper }} = {{ field.codeOrder }}
        {%- endfor %}
    {% endif %}
    def __init__(self):
        self._capnp_type = __capnp_{{ struct.name }}
        self._capnp_id = {{ '0x%016x' | format(struct.id) }}
        self._capnp_is_union = {{ struct.is_union }}
        {%- if struct.is_union %}
        self._capnp_union_type:{{ struct.name }}.Type
        {%- endif %}
        {%- for field in struct.fields %}
        self._{{ field.name }}:{{field.pytype}}
        {%- endfor %}
        {%- if struct.is_union %}

    def which(self) -> Type:
        return self._capnp_union_type
        {%- endif %}
    {% for field in struct.fields %}
    def set{{ field.c_name }}(self, value: {{ field.pytype }}):
        self._{{ field.name }} = value
        {%- if struct.is_union %}
        self._capnp_union_type = {{ struct.name }}.Type.{{ field.name | upper }}
        {%- endif %}

    def get{{ field.c_name }}(self) -> {{ field.pytype }}:
        {%- if struct.is_union %}
        if self._capnp_union_type != {{ struct.name }}.Type.{{ field.name | upper }}:
            raise ValueError("This field is not set.")
        {%- endif %}
        return self._{{ field.name }}
    {% endfor %}
{% endfor %}
{%- endif %}